{
  "warnings" : [ {
    "message" : "['inputs/taint-3lvs-eval.imp':19:14] on 'untyped taint::basic1(taint* this)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':25:14] on 'untyped taint::basic2(taint* this)': [EXPRESSION] [DEFINITE] The value passed for the 2nd parameter of this call is always tainted, and it reaches the sink at parameter 'v' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':25:14] on 'untyped taint::basic2(taint* this)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':33:14] on 'untyped taint::basic3(taint* this)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':40:15] on 'untyped taint::basic4(taint* this)': [EXPRESSION] [DEFINITE] The value passed for the 2nd parameter of this call is always tainted, and it reaches the sink at parameter 'v' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':40:15] on 'untyped taint::basic4(taint* this)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':52:14] on 'untyped taint::branch(taint* this, untyped b)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':52:14] on 'untyped taint::branch(taint* this, untyped b)': [EXPRESSION] [POSSIBLE] The value passed for the 2nd parameter of this call may be tainted, and it reaches the sink at parameter 'v' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':67:14] on 'untyped taint::branch2(taint* this, untyped b)': [EXPRESSION] [DEFINITE] The value passed for the 2nd parameter of this call is always tainted, and it reaches the sink at parameter 'v' of sink1"
  }, {
    "message" : "['inputs/taint-3lvs-eval.imp':67:14] on 'untyped taint::branch2(taint* this, untyped b)': [EXPRESSION] [POSSIBLE] The value passed for the 1st parameter of this call may be tainted, and it reaches the sink at parameter 'this' of sink1"
  } ],
  "files" : [ "js/cytoscape-3.21.1.min.js", "js/cytoscape-graphml-1.0.6-hier.js", "js/jquery-3.0.0.min.js", "report.json", "untyped_taint.basic1(taint__this).html", "untyped_taint.basic1(taint__this).json", "untyped_taint.basic2(taint__this).html", "untyped_taint.basic2(taint__this).json", "untyped_taint.basic3(taint__this).html", "untyped_taint.basic3(taint__this).json", "untyped_taint.basic4(taint__this).html", "untyped_taint.basic4(taint__this).json", "untyped_taint.branch(taint__this,_untyped_b).html", "untyped_taint.branch(taint__this,_untyped_b).json", "untyped_taint.branch2(taint__this,_untyped_b).html", "untyped_taint.branch2(taint__this,_untyped_b).json", "untyped_taint.sanitizer1(taint__this,_untyped_v).html", "untyped_taint.sanitizer1(taint__this,_untyped_v).json", "untyped_taint.sanitizer1(taint__this,_untyped_v)_830540954.html", "untyped_taint.sanitizer1(taint__this,_untyped_v)_830540954.json", "untyped_taint.sink1(taint__this,_untyped_v).html", "untyped_taint.sink1(taint__this,_untyped_v).json", "untyped_taint.sink1(taint__this,_untyped_v)_830528089.html", "untyped_taint.sink1(taint__this,_untyped_v)_830528089.json", "untyped_taint.sink1(taint__this,_untyped_v)_830528275.html", "untyped_taint.sink1(taint__this,_untyped_v)_830528275.json", "untyped_taint.sink1(taint__this,_untyped_v)_830528523.html", "untyped_taint.sink1(taint__this,_untyped_v)_830528523.json", "untyped_taint.sink1(taint__this,_untyped_v)_830529112.html", "untyped_taint.sink1(taint__this,_untyped_v)_830529112.json", "untyped_taint.sink1(taint__this,_untyped_v)_830529577.html", "untyped_taint.sink1(taint__this,_untyped_v)_830529577.json", "untyped_taint.sink1(taint__this,_untyped_v)_830529701.html", "untyped_taint.sink1(taint__this,_untyped_v)_830529701.json", "untyped_taint.source1(taint__this).html", "untyped_taint.source1(taint__this).json", "untyped_taint.source1(taint__this)_830534723.html", "untyped_taint.source1(taint__this)_830534723.json", "untyped_taint.source1(taint__this)_830535126.html", "untyped_taint.source1(taint__this)_830535126.json", "untyped_taint.source1(taint__this)_830536862.html", "untyped_taint.source1(taint__this)_830536862.json", "untyped_taint.source1(taint__this)_830537048.html", "untyped_taint.source1(taint__this)_830537048.json", "untyped_taint.source1(taint__this)_830537947.html", "untyped_taint.source1(taint__this)_830537947.json", "untyped_taint.source1(taint__this)_830538257.html", "untyped_taint.source1(taint__this)_830538257.json" ],
  "info" : {
    "cfgs" : "9",
    "duration" : "596ms",
    "end" : "2025-05-07T16:32:50.363+03:00",
    "expressions" : "56",
    "files" : "47",
    "globals" : "0",
    "members" : "9",
    "programs" : "1",
    "start" : "2025-05-07T16:32:49.767+03:00",
    "statements" : "32",
    "units" : "1",
    "version" : "0.1b9",
    "warnings" : "10"
  },
  "configuration" : {
    "analysisGraphs" : "HTML",
    "descendingPhaseType" : "NONE",
    "dumpForcesUnwinding" : "false",
    "fixpointWorkingSet" : "DuplicateFreeFIFOWorkingSet",
    "glbThreshold" : "5",
    "hotspots" : "unset",
    "jsonOutput" : "true",
    "openCallPolicy" : "WorstCasePolicy",
    "optimize" : "false",
    "recursionWideningThreshold" : "5",
    "semanticChecks" : "TaintThreeLevelsChecker",
    "serializeInputs" : "false",
    "serializeResults" : "true",
    "syntacticChecks" : "",
    "useWideningPoints" : "true",
    "wideningThreshold" : "5",
    "workdir" : "outputs/taint-3lvs-eval"
  }
}