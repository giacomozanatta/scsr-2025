class intervals {

	basic() {
		def i = 2;
		def j = -10;
		def a = i + j;
		def s = i - j;
//		def m = i * j;
//		def d = i / j;
//      def l = -i;
	}

	branches(b) {
		def x = 0;
		if (b)
           	x = x + 7;
       	else
           	x = -7;
		return x;
  }

	loop(b) {
			def c = 1;
			
			while (b < 3) {
				c = c + 1;
				b = b + 1; 
			}
			return c; 
	}

	simple(b) { 
		def x = 10;
		def y = 2;
		def z =1;

	if (b) {
			z = x / y;
		} else {
			z = y - x;
		}
		return z;
	}

    divNonZero(b) {
        // Division with a denominator that does not include zero
        def num = 0;   // Numerator is zero in all cases
        def denom = 0;   // Denominator is exactly zero in all cases
        if (b) {
            num = 10;    // branch 1: numerator = 10
        } else {
            num = 20;    // branch 2: numerator = 20
        }
        if (b) {
            denom = 2;   // branch 1: denominator = 2
        } else {
            denom = 5;   // branch 2: denominator = 5
        }
		def result = num / denom;   // Possible outcomes: 10/2=5, 20/5=4
        return result;
    }

    divSpanningZero(b) {
        // Division where the denominator interval spans zero
        def num = 0;   // Numerator is zero in all cases
        def denom = 0;   // Denominator is exactly zero in all cases
        if (b) {
            num = 10;    // branch 1: positive numerator
        } else {
            num = -5;    // branch 2: negative numerator
        }
        if (b) {
            denom = 2;   // branch 1: positive denominator
        } else {
            denom = 0;   // branch 2: denominator equals zero
        }
        def result = num / denom;   // Possible outcomes: 10/2=5, -5/0=undefined
		return result;
    }

    divExactZero(b) {
        // Division where the denominator is exactly zero; should be treated as bottom
        def num = 0;   // Numerator is zero in all cases
        def denom = 0;   // Denominator is exactly zero in all cases
        if (b) {
            num = 10;
        } else {
            num = -5;
        }
        denom = 0;   // Denominator is exactly zero in all cases
        def result = num / denom;   // Possible outcomes: 10/0=undefined, -5/0=undefined
		return result;
    }

    divVarying(b, c) {
        // Division where both numerator and denominator vary over two branches
        def num = 0;   // Numerator is zero in all cases
        def denom = 0;   // Denominator is exactly zero in all cases
        if (b) {
            num = 10;   // branch 1 for numerator
        } else {
            num = -5;   // branch 2 for numerator
        }
        if (c) {
            denom = 2;   // branch 1 for denominator (positive)
        } else {
            denom = -3;  // branch 2 for denominator (negative)
        }
        def result = num / denom;   // Possible outcomes: 10/2=5, -5/-3=1.67
		return result;
    }

    mulVarying(b, c, num) {
        // Division where both numerator and denominator vary over two branches
        def denom = 0;   // Denominator is exactly zero in all cases
        if (c) {
            denom = 2;   // branch 1 for denominator (positive)
        } else {
            denom = -3;  // branch 2 for denominator (negative)
        }
        def result = num / denom;   // Possible outcomes: 10/2=5, -5/-3=1.67
		return result;
    }

	
}
